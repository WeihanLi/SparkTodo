# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: tagName
  value: '$(Build.BuildNumber)'
- name: serviceName
  value: 'sparktodo-api'
- name: stableImageName
  value: '$(dockerId)/$(serviceName):stable'
- name: latestImageName
  value: '$(dockerId)/$(serviceName):latest'
- name: branchImageName
  value: '$(dockerId)/$(serviceName):$(Build.SourceBranchName)'
- name: imageName
  value: '$(dockerId)/$(serviceName):$(tagName)'
- group: "docker"
- group: "notification"

steps:

- task: UseDotNet@2
  displayName: 'Use .NET sdk'
  inputs:
    packageType: sdk
    version: 9.0.x
    includePreviewVersions: true

- script: dotnet build -c Release
  displayName: 'dotnet build'
  env:
    HUSKY: '0'

- script: docker build -f Dockerfile -t $(imageName) -t $(latestImageName) .
  displayName: 'Docker build Script'

- script: |
    docker login -u $(dockerId) -p $(pswd)
    docker push $(imageName)
    docker push $(latestImageName)
  displayName: 'Push docker image'

- task: Kubernetes@1
  displayName: 'kubectl set image'
  inputs:
    kubernetesServiceEndpoint: 'aks-hk-01'
    command: 'set'
    arguments: 'image deployment/$(serviceName) $(serviceName)=$(imageName)'

- script: |
    dotnet tool update -g dotnet-execute --prerelease
    export PATH="$PATH:$HOME/.dotnet/tools"
    dotnet-exec "https://github.com/OpenReservation/scripts/blob/main/deploy/azure-pipelines-notification.cs"
  displayName: 'Push notification'  
  env:
    # https://learn.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch#secret-variables
    # can not directly reference a secret value
    DingBotWebhookUrl: $(DingBotWebhookUrl)
